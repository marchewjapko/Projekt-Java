/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Admin
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    String filename = null;
    String savename = null;
    int setIterations = -1;
    boolean openState = false;
    boolean saveState = false;
    boolean setState = false;

    public Menu() {
        initComponents();
    }

    private boolean isIntsInFile(String filename) throws FileNotFoundException {
        Scanner scan = new Scanner(new File(filename));
        boolean stateNumbers = false;
        boolean stateProper = true;
        boolean stateResult = false;
        while (scan.hasNext()) {
            if (scan.hasNextInt() == true) {
                System.out.println("int");
                int line = scan.nextInt();
                if (Integer.toString(line).contains("0") == false) {
                    System.out.println("nie ma zer");
                    if (stateProper == true) {
                        stateProper = false;
                    } else {
                        stateProper = false;
                    }
                }
                if (Integer.toString(line).contains("1") == false) {
                    System.out.println("nie ma zer");
                    if (stateProper == true) {
                        stateProper = false;
                    } else {
                        stateProper = false;
                    }
                }
                if (Integer.toString(line).contains("2") == false) {
                    System.out.println("nie ma zer");
                    if (stateProper == true) {
                        stateProper = false;
                    } else {
                        stateProper = false;
                    }
                }
                if (Integer.toString(line).contains("3") == false) {
                    System.out.println("nie ma zer");
                    if (stateProper == true) {
                        stateProper = false;
                    } else {
                        stateProper = false;
                    }
                }
                stateNumbers = true;
            } else {
                System.out.println("nie ma inta");
                stateNumbers = false;
                break;
            }

        }
        if (stateProper == true && stateNumbers == true) {
            return stateResult = true;
        } else {
            return stateResult = false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        setButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        openPathField = new javax.swing.JTextField();
        savePathField = new javax.swing.JTextField();
        setField = new javax.swing.JTextField();
        savePathLabel = new javax.swing.JLabel();
        setLabel = new javax.swing.JLabel();
        openPathLabel = new javax.swing.JLabel();
        infoButton = new javax.swing.JButton();
        openSuccess = new javax.swing.JLabel();
        saveSuccess = new javax.swing.JLabel();
        setSuccess = new javax.swing.JLabel();
        boardButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wireworld");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(52, 73, 94));
        setForeground(java.awt.Color.blue);
        setResizable(false);

        menuPanel.setBackground(new java.awt.Color(44, 62, 80));
        menuPanel.setToolTipText("");

        titleLabel.setFont(new java.awt.Font("Open Sans", 0, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(230, 126, 34));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Wireworld project");

        saveButton.setBackground(new java.awt.Color(52, 73, 94));
        saveButton.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        saveButton.setForeground(new java.awt.Color(230, 126, 34));
        saveButton.setText("Save File");
        saveButton.setPreferredSize(new java.awt.Dimension(90, 25));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        setButton.setBackground(new java.awt.Color(52, 73, 94));
        setButton.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        setButton.setForeground(new java.awt.Color(230, 126, 34));
        setButton.setText("Set");
        setButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButtonActionPerformed(evt);
            }
        });

        openButton.setBackground(new java.awt.Color(52, 73, 94));
        openButton.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        openButton.setForeground(new java.awt.Color(230, 126, 34));
        openButton.setText("Open File");
        openButton.setPreferredSize(new java.awt.Dimension(90, 25));
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        startButton.setBackground(new java.awt.Color(230, 126, 34));
        startButton.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        startButton.setForeground(new java.awt.Color(52, 73, 94));
        startButton.setText("Start !");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    startButtonActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        openPathField.setEditable(false);
        openPathField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openPathField.setMaximumSize(new java.awt.Dimension(120, 20));
        openPathField.setMinimumSize(new java.awt.Dimension(120, 20));
        openPathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openPathFieldActionPerformed(evt);
            }
        });

        savePathField.setEditable(false);
        savePathField.setToolTipText("");
        savePathField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        savePathField.setMaximumSize(new java.awt.Dimension(125, 20));
        savePathField.setMinimumSize(new java.awt.Dimension(125, 20));
        savePathField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                savePathFieldMouseEntered(evt);
            }
        });

        setField.setText("Type here ...");
        setField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setFieldMouseClicked(evt);
            }
        });
        setField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFieldActionPerformed(evt);
            }
        });

        savePathLabel.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        savePathLabel.setForeground(new java.awt.Color(240, 240, 240));
        savePathLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        savePathLabel.setText("Save path");

        setLabel.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        setLabel.setForeground(new java.awt.Color(240, 240, 240));
        setLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        setLabel.setText("Number of Iterations");

        openPathLabel.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        openPathLabel.setForeground(new java.awt.Color(240, 240, 240));
        openPathLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        openPathLabel.setText("Open path");

        infoButton.setBackground(new java.awt.Color(149, 165, 166));
        infoButton.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        infoButton.setText("Help");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        openSuccess.setForeground(new java.awt.Color(0, 204, 51));
        openSuccess.setText("  ");

        saveSuccess.setForeground(new java.awt.Color(0, 204, 51));
        saveSuccess.setText("  ");

        setSuccess.setForeground(new java.awt.Color(0, 204, 51));
        setSuccess.setText("   ");

        boardButton.setBackground(new java.awt.Color(52, 73, 94));
        boardButton.setFont(new java.awt.Font("Open Sans", 1, 11)); // NOI18N
        boardButton.setForeground(new java.awt.Color(230, 126, 34));
        boardButton.setText("Board Creator");
        boardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
                menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(menuPanelLayout.createSequentialGroup()
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(menuPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(menuPanelLayout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(boardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(openPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(openPathField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(openButton, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(openSuccess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addGap(8, 8, 8)
                                                                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                                                                        .addGap(40, 40, 40)
                                                                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(savePathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(savePathField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                                                                .addGap(39, 39, 39)
                                                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(menuPanelLayout.createSequentialGroup()
                                                                .addGap(123, 123, 123)
                                                                .addComponent(infoButton))
                                                        .addGroup(menuPanelLayout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(setField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(menuPanelLayout.createSequentialGroup()
                                                                                .addComponent(saveSuccess)
                                                                                .addGap(14, 14, 14)
                                                                                .addComponent(setButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(setLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(setSuccess)))))
                                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
                menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(menuPanelLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(titleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(setLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(savePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(openPathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(openPathField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(setField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(savePathField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(openButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(setButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(setSuccess)
                                        .addComponent(saveSuccess)
                                        .addComponent(openSuccess))
                                .addGap(22, 22, 22)
                                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(boardButton))
                                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static boolean isCellValid(String array) {
        for (int i = 0; i < array.length(); i++) {
            if (array.charAt(i) != '0' && array.charAt(i) != '1' && array.charAt(i) != '2' && array.charAt(i) != '3') {
                return false;
            }
        }
        return true;
    }

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        // TODO add your handling code here:
        ErrorForm errorScreen = new ErrorForm();
        System.out.println("Open");
        openSuccess.setText("  ");
        JFileChooser chooseFile = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text files", "txt");
        chooseFile.setAcceptAllFileFilterUsed(false);
        chooseFile.setFileFilter(filter);
        int result = chooseFile.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {

            File file = chooseFile.getSelectedFile();
            filename = file.getAbsolutePath();
            boolean state = true;
            BufferedReader reader;
            try {
                reader = new BufferedReader(new InputStreamReader(new FileInputStream(filename), StandardCharsets.US_ASCII));
                String currentLine = reader.readLine();
                int colSize = currentLine.length();
                int rowSize = 1;
                while ((currentLine = reader.readLine()) != null) //Determining the size of the board from input file
                {
                    for (int currentCol = 0; currentCol < currentLine.length(); currentCol++) {
                        int currentSize = currentLine.length();
                        if (currentCol != 0 && currentSize != colSize) {
                            System.out.print("Lengths of rows don't match up, all rows must be the same length!");
                            errorScreen.NewScreen("Lengths of rows don't match up");
                            state = false;
                            openState=false;
                            return;

                        }
                        if (!isCellValid(currentLine)) {
                            System.out.println("Invalid value found the current row, only specified digits are accepted!");
                            errorScreen.NewScreen("Invalide value was found");
                            state = false;
                            openState=false;
                            return;
                        }
                    }
                    rowSize++;
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (state == true) {
                openPathField.setText(filename);
                System.out.println(state);
                openSuccess.setText("✓");
                openState=true;
            }

            //  openPathField.setToolTipText(filename);
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
        }

    }//GEN-LAST:event_openButtonActionPerformed


    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Save");
        saveSuccess.setText("  ");
        JFileChooser saveFile = new JFileChooser();
        saveFile.setDialogTitle("Choose directory");
        saveFile.setCurrentDirectory(new java.io.File("."));
        saveFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = saveFile.showSaveDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File file = saveFile.getSelectedFile();
            System.out.println(file.getAbsolutePath());
            savename = file.getAbsolutePath() + "\\WireWorld" ;
            savePathField.setText(savename);

            File theDir = new File(savename);

            if(!theDir.exists())
            {
                boolean dirResult = false;
                try
                {
                    theDir.mkdir();
                    dirResult = true;
                }
                catch(SecurityException e)
                {
                    ErrorForm errorDir = new ErrorForm();
                    errorDir.NewScreen("Error while creating directory");
                }
                if (dirResult)
                {
                    System.out.println("Dir Created");
                }
            }

            saveSuccess.setText("✓");
            saveState = true;
            //  openPathField.setToolTipText(filename);
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
            saveState = false;
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void openPathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openPathFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openPathFieldActionPerformed

    private void setFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setFieldMouseClicked
        // TODO add your handling code here:
        setField.setText("");
    }//GEN-LAST:event_setFieldMouseClicked

    private void setButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButtonActionPerformed
        // TODO add your handling code here:
        //  System.out.println(setField.getText());
        ErrorForm error = new ErrorForm();

        setSuccess.setText("  ");
        if (setField.getText().equals("")) {
            System.out.println("pusto");
            setState = false;
            error.NewScreen("Iteration field is empty");

        } else if (setField.getText().equals("Type here ...")) {

            System.out.println("pusto");
            setState = false;
            error.NewScreen("Iteration field is empty");
        } else if (isNumeric(setField.getText()) == false) {
            System.out.println("String or Double");
            setState = false;
            error.NewScreen("Insertion is not integer");

        } else {
            setIterations = Integer.parseInt(setField.getText());
            setSuccess.setText("✓");
            setState = true;
            System.out.println(setIterations);
        }

    }//GEN-LAST:event_setButtonActionPerformed

    private void setFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_setFieldActionPerformed

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        // TODO add your handling code here:
        HelpForm help = new HelpForm();
        help.newScreen();

    }//GEN-LAST:event_infoButtonActionPerformed

    private void savePathFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savePathFieldMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_savePathFieldMouseEntered

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        if(openState == true && saveState == true && setState == true)
        {
            System.out.println("Startujemy");
            Algorythm algorythm = new Algorythm();
            algorythm.gridChanger(setIterations, filename, savename);
            Generator generator = new Generator();
            Generator.Generate(savename , setIterations+1);
            // generator.main(savePathField.getText());

        }
        else
        {
            ErrorForm errorScreen = new ErrorForm();
            errorScreen.NewScreen("Not all options was declared corectly");
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void boardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boardButtonActionPerformed
        // TODO add your handling code here:
        /* otworzymy sobie tutaj board*/
    }//GEN-LAST:event_boardButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    private static boolean isNumeric(String str) {
        boolean numeric = true;

        try {
            int num = Integer.parseInt(str);
        } catch (NumberFormatException e) {
            numeric = false;
        }
        return numeric;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Dark Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Menu frame = new Menu();
                frame.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boardButton;
    private javax.swing.JButton infoButton;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JButton openButton;
    private javax.swing.JTextField openPathField;
    private javax.swing.JLabel openPathLabel;
    private javax.swing.JLabel openSuccess;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField savePathField;
    private javax.swing.JLabel savePathLabel;
    private javax.swing.JLabel saveSuccess;
    private javax.swing.JButton setButton;
    private javax.swing.JTextField setField;
    private javax.swing.JLabel setLabel;
    private javax.swing.JLabel setSuccess;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
